{"ast":null,"code":"var _jsxFileName = \"/Users/ilas/Desktop/Project/react-social-network-master/src/components/UsersPage/UsersPage.jsx\";\n// Libraries\nimport React from \"react\";\nimport axios from \"axios\";\n// Component styles\nimport style from './UsersPage.module.scss';\nimport manAvatar from '../../../src/img/man-avatar.png';\nimport preloader from '../../../src/img/preloader.gif';\nimport User from './User/User';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Users extends React.Component {\n  componentDidMount() {\n    this.props.enablePreloader();\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.selectedPage}&count=${this.props.pageSize}`).then(respons => {\n      this.props.disablePreloader();\n      this.props.setUsers(respons.data.items);\n      // this.props.setUsersCount(respons.data.totalCount);\n      // console.log(respons.data)\n    });\n  }\n\n  onPageChanged(pageNumber) {\n    this.props.setPage(pageNumber);\n    this.props.enablePreloader();\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(respons => {\n      this.props.disablePreloader();\n      this.props.setUsers(respons.data.items);\n      // console.log(respons.data.items);\n    });\n  }\n\n  render() {\n    let pagesCount = Math.ceil(this.props.usersCount / this.props.pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n      pages.push(i);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isLoading ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preloader,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this) : null, this.props.users.map(user => {\n        return /*#__PURE__*/_jsxDEV(User, {\n          user: user\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 8\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.paginationContainer,\n        children: pages.map(pageNumber => {\n          // Функция возвращает css класс: 'active' для выбранной страницы с пользователями\n          let isActive = () => {\n            if (pageNumber === this.props.selectedPage) {\n              return style.active;\n            }\n          };\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.paginationItem + ' ' + isActive(),\n            onClick: e => this.onPageChanged(pageNumber),\n            children: pageNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default Users;","map":{"version":3,"names":["React","axios","style","manAvatar","preloader","User","Users","Component","componentDidMount","props","enablePreloader","get","selectedPage","pageSize","then","respons","disablePreloader","setUsers","data","items","onPageChanged","pageNumber","setPage","render","pagesCount","Math","ceil","usersCount","pages","i","push","isLoading","users","map","user","id","paginationContainer","isActive","active","paginationItem","e"],"sources":["/Users/ilas/Desktop/Project/react-social-network-master/src/components/UsersPage/UsersPage.jsx"],"sourcesContent":["// Libraries\nimport React from \"react\";\nimport axios from \"axios\";\n// Component styles\nimport style from './UsersPage.module.scss'\nimport manAvatar from '../../../src/img/man-avatar.png'\nimport preloader from '../../../src/img/preloader.gif'\n\nimport User from './User/User'\n\nclass Users extends React.Component {\n\n\tcomponentDidMount() {\n\t\tthis.props.enablePreloader()\n\t\taxios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.selectedPage}&count=${this.props.pageSize}`).then(\n\t\t\trespons => {\n\t\t\t\tthis.props.disablePreloader()\n\t\t\t\tthis.props.setUsers(respons.data.items);\n\t\t\t\t// this.props.setUsersCount(respons.data.totalCount);\n\t\t\t\t// console.log(respons.data)\n\t\t\t});\n\t}\n\n\tonPageChanged(pageNumber) {\n\t\tthis.props.setPage(pageNumber);\n\t\tthis.props.enablePreloader()\n\t\taxios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(\n\t\t\trespons => {\n\t\t\t\tthis.props.disablePreloader()\n\t\t\t\tthis.props.setUsers(respons.data.items);\n\t\t\t\t// console.log(respons.data.items);\n\t\t\t});\n\t}\n\n\trender() {\n\n\t\tlet pagesCount = Math.ceil(this.props.usersCount / this.props.pageSize);\n\t\tlet pages = []\n\n\t\tfor (let i = 1; i <= pagesCount; i++) {\n\t\t\tpages.push(i)\n\t\t}\n\n\n\t\treturn (\n\t\t\t<>\n\n\t\t\t\t{/* Enable or disable preloader */}\n\t\t\t\t{\n\t\t\t\t\tthis.props.isLoading\n\t\t\t\t\t\t? <img src={preloader} alt=\"\"/>\n\t\t\t\t\t\t: null\n\t\t\t\t}\n\n\t\t\t\t{/* Render list of users */}\n\t\t\t\t{\n\t\t\t\t\tthis.props.users.map((user) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<User user={user} key={user.id}/>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t{/* Pagination buttons */}\n\t\t\t\t<div className={style.paginationContainer}>\n\t\t\t\t\t{\n\t\t\t\t\t\tpages.map((pageNumber) => {\n\n\t\t\t\t\t\t\t// Функция возвращает css класс: 'active' для выбранной страницы с пользователями\n\t\t\t\t\t\t\tlet isActive = () => {\n\t\t\t\t\t\t\t\tif (pageNumber === this.props.selectedPage) {\n\t\t\t\t\t\t\t\t\treturn style.active\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName={style.paginationItem + ' ' + isActive()}\n\t\t\t\t\t\t\t\t\tonClick={(e) => this.onPageChanged(pageNumber)}>\n\t\t\t\t\t\t\t\t\t{pageNumber}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default Users;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,SAAS,MAAM,iCAAiC;AACvD,OAAOC,SAAS,MAAM,gCAAgC;AAEtD,OAAOC,IAAI,MAAM,aAAa;AAAA;AAAA;AAE9B,MAAMC,KAAK,SAASN,KAAK,CAACO,SAAS,CAAC;EAEnCC,iBAAiB,GAAG;IACnB,IAAI,CAACC,KAAK,CAACC,eAAe,EAAE;IAC5BT,KAAK,CAACU,GAAG,CAAE,2DAA0D,IAAI,CAACF,KAAK,CAACG,YAAa,UAAS,IAAI,CAACH,KAAK,CAACI,QAAS,EAAC,CAAC,CAACC,IAAI,CAChIC,OAAO,IAAI;MACV,IAAI,CAACN,KAAK,CAACO,gBAAgB,EAAE;MAC7B,IAAI,CAACP,KAAK,CAACQ,QAAQ,CAACF,OAAO,CAACG,IAAI,CAACC,KAAK,CAAC;MACvC;MACA;IACD,CAAC,CAAC;EACJ;;EAEAC,aAAa,CAACC,UAAU,EAAE;IACzB,IAAI,CAACZ,KAAK,CAACa,OAAO,CAACD,UAAU,CAAC;IAC9B,IAAI,CAACZ,KAAK,CAACC,eAAe,EAAE;IAC5BT,KAAK,CAACU,GAAG,CAAE,2DAA0DU,UAAW,UAAS,IAAI,CAACZ,KAAK,CAACI,QAAS,EAAC,CAAC,CAACC,IAAI,CACnHC,OAAO,IAAI;MACV,IAAI,CAACN,KAAK,CAACO,gBAAgB,EAAE;MAC7B,IAAI,CAACP,KAAK,CAACQ,QAAQ,CAACF,OAAO,CAACG,IAAI,CAACC,KAAK,CAAC;MACvC;IACD,CAAC,CAAC;EACJ;;EAEAI,MAAM,GAAG;IAER,IAAIC,UAAU,GAAGC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACjB,KAAK,CAACkB,UAAU,GAAG,IAAI,CAAClB,KAAK,CAACI,QAAQ,CAAC;IACvE,IAAIe,KAAK,GAAG,EAAE;IAEd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIL,UAAU,EAAEK,CAAC,EAAE,EAAE;MACrCD,KAAK,CAACE,IAAI,CAACD,CAAC,CAAC;IACd;IAGA,oBACC;MAAA,WAIE,IAAI,CAACpB,KAAK,CAACsB,SAAS,gBACjB;QAAK,GAAG,EAAE3B,SAAU;QAAC,GAAG,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,GAC7B,IAAI,EAKP,IAAI,CAACK,KAAK,CAACuB,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAK;QAC9B,oBACC,QAAC,IAAI;UAAC,IAAI,EAAEA;QAAK,GAAMA,IAAI,CAACC,EAAE;UAAA;UAAA;UAAA;QAAA,QAAG;MAEnC,CAAC,CAAC,eAIH;QAAK,SAAS,EAAEjC,KAAK,CAACkC,mBAAoB;QAAA,UAExCR,KAAK,CAACK,GAAG,CAAEZ,UAAU,IAAK;UAEzB;UACA,IAAIgB,QAAQ,GAAG,MAAM;YACpB,IAAIhB,UAAU,KAAK,IAAI,CAACZ,KAAK,CAACG,YAAY,EAAE;cAC3C,OAAOV,KAAK,CAACoC,MAAM;YACpB;UACD,CAAC;UAED,oBACC;YACC,SAAS,EAAEpC,KAAK,CAACqC,cAAc,GAAG,GAAG,GAAGF,QAAQ,EAAG;YACnD,OAAO,EAAGG,CAAC,IAAK,IAAI,CAACpB,aAAa,CAACC,UAAU,CAAE;YAAA,UAC9CA;UAAU;YAAA;YAAA;YAAA;UAAA,QACN;QAER,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAEE;IAAA,gBACJ;EAEL;AACD;AAEA,eAAef,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}